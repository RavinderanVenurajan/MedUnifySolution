// <auto-generated />
using System;
using MedUnifyApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedUnifyApi.Migrations
{
    [DbContext(typeof(MedUnifyContext))]
    [Migration("20231229073257_AlterUserTableToDb")]
    partial class AlterUserTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("DataModel.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.ToTable("Patients", (string)null);

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Address = "123 Main St",
                            City = "Los Angeles",
                            CreatedAt = new DateTime(2023, 12, 29, 13, 2, 56, 349, DateTimeKind.Local).AddTicks(8827),
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Doe",
                            OrganizationId = 1,
                            State = "CA",
                            UpdatedAt = new DateTime(2023, 12, 29, 13, 2, 56, 349, DateTimeKind.Local).AddTicks(8829)
                        },
                        new
                        {
                            PatientId = 2,
                            Address = "456 Oak St",
                            City = "New York",
                            CreatedAt = new DateTime(2023, 12, 29, 13, 2, 56, 349, DateTimeKind.Local).AddTicks(8833),
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Smith",
                            OrganizationId = 1,
                            State = "NY",
                            UpdatedAt = new DateTime(2023, 12, 29, 13, 2, 56, 349, DateTimeKind.Local).AddTicks(8834)
                        });
                });

            modelBuilder.Entity("DataModel.Models.ProgressNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("VisitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProgressNotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SectionName = "Height",
                            SectionText = "5.6",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VisitDate = new DateTime(2023, 12, 29, 13, 2, 56, 349, DateTimeKind.Local).AddTicks(9009),
                            VisitId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SectionName = "Weight",
                            SectionText = "59 - Gradual decrease",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VisitDate = new DateTime(2023, 12, 29, 13, 2, 56, 349, DateTimeKind.Local).AddTicks(9012),
                            VisitId = 2
                        });
                });

            modelBuilder.Entity("DataModel.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Userid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DataModel.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
