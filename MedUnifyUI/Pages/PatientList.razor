
@page "/Patient"

@using DataModel.Models;
@using MedUnifyUI.Services;
@inject HttpClient httpClient
@inject IPatientInterface _IPatient
@inject NavigationManager NavigationManager

@code {
    private List<Patient> patients;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetPatients();

        }
        catch (Exception ex)
        {
            //  toastService.ShowError("Error loading patients. " + ex.Message);
        }
    }
    private async Task GetPatients()
    {
        patients = await _IPatient.getPatient();
    }
    private void ViewPatientDetails(int patientId) =>
     
        NavigationManager.NavigateTo($"/visit-list/{patientId}");

    private void UpdatePatient(int patientId)
    {
        NavigationManager.NavigateTo($"/updatepatient/{patientId}");
    }
    private void AddPatientVisit(int patientId)
    {
        NavigationManager.NavigateTo($"/addvisit/{patientId}");
    }
    private async Task DeletePatient(int patientId)
    {
   
        await _IPatient.DeletePatient(patientId);

        patients = await _IPatient.getPatient();
    }
}

<h3>Patient List</h3>

<!-- Display a list of patients -->
@if (patients != null && patients.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Address</th>
                <th>State</th>
                <th>City</th>
                <th>Created At</th>
                <th>Updated At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patient in patients)
            {
                <tr>
                    <td>@patient.FirstName</td>
                    <td>@patient.LastName</td>
                    <td>@patient.Address</td>
                    <td>@patient.State</td>
                    <td>@patient.City</td>
                    <td>@patient.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@patient.UpdatedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() =>AddPatientVisit(patient.PatientId)">Add Visit</button>
                        <button class="btn btn-primary" @onclick="() => ViewPatientDetails(patient.PatientId) ">View Visit</button>
                    </td>
                    <td>
                        <button class="btn btn-warning" @onclick="()=> UpdatePatient(patient.PatientId)">Update</button>
                        <button class="btn btn-danger" @onclick="()=> DeletePatient(patient.PatientId)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No patients found.</p>
}


