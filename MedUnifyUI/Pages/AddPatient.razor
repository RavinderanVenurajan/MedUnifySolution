@page "/add-patient"
@using DataModel.Models;
@using MedUnifyUI.Services;
@inject HttpClient httpClient
@inject IPatientInterface _IPatient

<h3>Add Patient</h3>

<!-- Form to add a new patient -->
<EditForm Model="@newPatient" OnValidSubmit="AddPatients">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="newPatient.FirstName">First Name</label>
        <InputText @bind-Value="newPatient.FirstName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="newPatient.LastName">Last Name</label>
        <InputText @bind-Value="newPatient.LastName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="newPatient.Address">Address</label>
        <InputText @bind-Value="newPatient.Address" class="form-control" />
    </div>

    <div class="form-group">
        <label for="newPatient.State">State</label>
        <InputText @bind-Value="newPatient.State" class="form-control" />
    </div>

    <div class="form-group">
        <label for="newPatient.City">City</label>
        <InputText @bind-Value="newPatient.City" class="form-control" />
    </div>

    <!-- Add other patient properties here -->
    <br />
    <button type="submit" class="btn btn-primary">Add Patient</button>
</EditForm>

@code {
    private Patient newPatient = new Patient();

    // [Inject]
    // private ToastService ToastService { get; set; }

    protected override void OnInitialized()
    {
        // Inject ApiService
       // apiService = new ApiService(HttpClient); // Inject your actual ApiService

       // patients = await _IPatient.AddPatient();

        // Optional: Initialize newPatient with default values or perform other setup
    }

    private async Task AddPatients()
    {
        try
        {
            // Call your API service method to add a new patient
            await _IPatient.AddPatient(newPatient);

            // Optionally, reset the form or perform other actions after successful addition
            newPatient = new Patient();

            // Show a success toast
           // ToastService.ShowSuccess("Patient added successfully");
        }
        catch (Exception ex)
        {
            // If an error occurs, show an error toast
           // ToastService.ShowError($"Error adding patient: {ex.Message}");
        }
    }
}
