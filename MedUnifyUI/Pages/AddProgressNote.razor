@page "/addprogressnotes/{visitId}/{PatientId}"
@using DataModel.Models;
@using MedUnifyUI.Services;
@inject HttpClient httpClient
@inject IVisitorService IVisitor
@inject NavigationManager NavigationManager

<h3>Add Progress Notes</h3>

@if (visit != null)
{
    <form>
        <label for="sectionName">Section Name:</label>
        <input type="text" id="sectionName" @bind="newProgressNotes.SectionName" />

        <label for="sectionText">Section Text:</label>
        <textarea id="sectionText" @bind="newProgressNotes.SectionText"></textarea>


        <button type="button" class="btn btn-primary" @onclick="AddProgressNotes">Add Progress Notes</button>
    </form>
    <br />
    <div>
    @if (progressNotes != null && progressNotes.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Section Name</th>
                    <th>Section Text</th>
                    <!-- Add other progress notes columns -->
                </tr>
            </thead>
            <tbody>
                @foreach (var note in progressNotes)
                {
                    <tr>
                        <td>@note.SectionName</td>
                        <td>@note.SectionText</td>
                        <!-- Add other progress notes data -->
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No progress notes available.</p>
    }
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public string VisitId { get; set; }
    [Parameter]
    public string PatientId { get; set; }

    private Visit visit;
    private ProgressNote newProgressNotes = new ProgressNote();
    private List<ProgressNote> progressNotes;

    protected override async Task OnInitializedAsync()
    {
        // Fetch visit details based on the provided visitId
        visit = await IVisitor.GetVisitById(Convert.ToInt32(VisitId));
        
    }

    private async Task AddProgressNotes()
    {
        newProgressNotes.VisitId = Convert.ToInt32(VisitId);
        await IVisitor.AddVisitProgressNotes(newProgressNotes);
        progressNotes = await IVisitor.GetProgressNotesByVisitId(Convert.ToInt32(VisitId));
        newProgressNotes.SectionName = string.Empty;
        newProgressNotes.SectionText = string.Empty;
    
    }
}
